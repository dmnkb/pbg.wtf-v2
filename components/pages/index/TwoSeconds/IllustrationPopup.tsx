import { css } from "@emotion/css"
import {
	BellIcon,
	MailOpenIcon,
	AnnotationIcon,
	ExclamationCircleIcon,
	XIcon,
} from "@heroicons/react/outline"

export enum IllustrationPopupTypes {
	NOTIFICATION,
	NEWSLETTER,
	HELP,
	COOKIE,
	SPINNER,
}

const IconMap: { [key in IllustrationPopupTypes]?: any } = {
	0: (
		<div className='relative w-[24px] h-[24px] z-[10] mb-[10px] text-black'>
			<BellIcon className='w-[24px] h-[24px] z-0' />
		</div>
	),
	1: (
		<div className='relative w-[24px] h-[24px] z-[10] mb-[10px] text-black'>
			<MailOpenIcon className='w-[24px] h-[24px] z-0' />
		</div>
	),
	2: (
		<div className='relative w-[24px] h-[24px] z-[10] mb-[10px] text-black'>
			<AnnotationIcon className='w-[24px] h-[24px] z-0' />
		</div>
	),
	3: (
		<div className='relative w-[24px] h-[24px] z-[10] mb-[10px] text-black'>
			<ExclamationCircleIcon className='w-[24px] h-[24px] z-0' />
		</div>
	),
}

interface IllustrationPopupInterface {
	readonly type: IllustrationPopupTypes
	readonly className?: string
	readonly animationDelay?: number
}
const IllustrationPopup: React.FC<IllustrationPopupInterface> = ({
	type,
	className,
	animationDelay,
}) => {
	className = className || ""
	return (
		<div className={`absolute ${className ? " " + className : ""}`}>
			{type === IllustrationPopupTypes.SPINNER ? (
				<div>
					<svg
						width='161'
						height='161'
						viewBox='0 0 161 161'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'
						className='absolute'
					>
						<path
							fillRule='evenodd'
							clipRule='evenodd'
							d='M58.8652 1.31523C58.9786 1.28431 59.0922 1.25362 59.2059 1.22316C59.3196 1.19269 59.4333 1.16248 59.547 1.13252C64.6302 -0.206514 69.8364 2.82869 71.1755 7.91185C72.5145 12.995 69.4793 18.2012 64.3961 19.5403C64.3083 19.5634 64.2205 19.5867 64.1327 19.6102C64.0449 19.6338 63.9572 19.6575 63.8696 19.6813C58.7979 21.0633 53.5663 18.0722 52.1843 13.0005C50.8024 7.92884 53.7935 2.69717 58.8652 1.31523ZM36.1411 22.2406C39.8456 25.97 39.8253 31.9963 36.0958 35.7008C35.968 35.8277 35.8408 35.9552 35.7141 36.0832C32.0166 39.8195 25.9903 39.851 22.254 36.1536C18.5177 32.4561 18.4862 26.4298 22.1837 22.6935C22.3487 22.5267 22.5144 22.3606 22.6809 22.1952C26.4104 18.4908 32.4367 18.5111 36.1411 22.2406ZM89.6893 7.89237C91.0327 2.81037 96.2415 -0.22037 101.324 1.12303C101.55 1.18301 101.777 1.24395 102.003 1.30585C107.074 2.69287 110.059 7.92754 108.672 12.9978C107.285 18.0681 102.051 21.054 96.9805 19.6669C96.8068 19.6194 96.6328 19.5726 96.4587 19.5266C91.3766 18.1832 88.3459 12.9744 89.6893 7.89237ZM12.9978 52.1857C18.0681 53.5728 21.054 58.8074 19.6669 63.8777C19.6194 64.0514 19.5726 64.2253 19.5266 64.3995C18.1832 69.4815 12.9744 72.5123 7.89238 71.1688C2.81037 69.8255 -0.220365 64.6166 1.12304 59.5346C1.18302 59.3077 1.24396 59.0811 1.30585 58.8549C2.69287 53.7846 7.92754 50.7987 12.9978 52.1857ZM124.705 22.254C128.402 18.5177 134.428 18.4862 138.165 22.1837C138.331 22.3487 138.498 22.5144 138.663 22.6809C142.367 26.4104 142.347 32.4367 138.618 36.1411C134.888 39.8456 128.862 39.8253 125.157 36.0958C125.03 35.968 124.903 35.8408 124.775 35.7141C121.039 32.0166 121.007 25.9903 124.705 22.254ZM7.91185 89.6827C12.995 88.3437 18.2012 91.3789 19.5403 96.462C19.5634 96.5498 19.5867 96.6376 19.6103 96.7254C19.6338 96.8132 19.6575 96.9009 19.6813 96.9885C21.0633 102.06 18.0722 107.292 13.0005 108.674C7.92884 110.056 2.69717 107.065 1.31523 101.993C1.28432 101.88 1.25363 101.766 1.22316 101.652C1.1927 101.539 1.16249 101.425 1.13253 101.311C-0.206508 96.228 2.8287 91.0217 7.91185 89.6827ZM147.858 52.1843C152.929 50.8024 158.161 53.7935 159.543 58.8652C159.574 58.9786 159.605 59.0922 159.635 59.2059C159.665 59.3196 159.696 59.4333 159.726 59.547C161.065 64.6302 158.029 69.8364 152.946 71.1754C147.863 72.5145 142.657 69.4793 141.318 64.3961C141.295 64.3083 141.271 64.2205 141.248 64.1327C141.224 64.0449 141.201 63.9572 141.177 63.8696C139.795 58.7979 142.786 53.5663 147.858 52.1843ZM22.2406 124.717C25.97 121.013 31.9963 121.033 35.7008 124.762C35.8277 124.89 35.9552 125.017 36.0832 125.144C39.8195 128.842 39.851 134.868 36.1536 138.604C32.4561 142.34 26.4298 142.372 22.6935 138.674C22.5267 138.51 22.3606 138.344 22.1953 138.177C18.4908 134.448 18.5111 128.421 22.2406 124.717ZM152.966 89.6893C158.048 91.0327 161.079 96.2415 159.735 101.324C159.675 101.55 159.614 101.777 159.552 102.003C158.165 107.074 152.931 110.059 147.86 108.672C142.79 107.285 139.804 102.051 141.191 96.9805C141.239 96.8068 141.286 96.6328 141.332 96.4587C142.675 91.3766 147.884 88.3459 152.966 89.6893ZM52.1857 147.86C53.5728 142.79 58.8074 139.804 63.8777 141.191C64.0514 141.239 64.2253 141.286 64.3995 141.332C69.4815 142.675 72.5123 147.884 71.1689 152.966C69.8255 158.048 64.6166 161.079 59.5346 159.735C59.3077 159.675 59.0811 159.614 58.8549 159.552C53.7846 158.165 50.7987 152.931 52.1857 147.86ZM138.604 124.705C142.34 128.402 142.372 134.428 138.675 138.165C138.51 138.331 138.344 138.498 138.177 138.663C134.448 142.367 128.421 142.347 124.717 138.618C121.013 134.888 121.033 128.862 124.762 125.157C124.89 125.03 125.017 124.903 125.144 124.775C128.842 121.039 134.868 121.007 138.604 124.705ZM89.6827 152.946C88.3437 147.863 91.3789 142.657 96.462 141.318C96.5239 141.302 96.5857 141.285 96.6475 141.269C96.6735 141.262 96.6995 141.255 96.7254 141.248C96.8132 141.224 96.9009 141.201 96.9885 141.177C102.06 139.795 107.292 142.786 108.674 147.858C110.056 152.929 107.065 158.161 101.993 159.543C101.88 159.574 101.766 159.605 101.652 159.635L101.579 159.654C101.49 159.678 101.401 159.702 101.311 159.726C96.228 161.065 91.0217 158.029 89.6827 152.946Z'
							fill='white'
						/>
					</svg>
				</div>
			) : (
				<div
					className={
						`absolute bg-white border-2 border-black flex items-center justify-center shadow-main w-full h-full ` +
						css`
							animation: shake-animation 4.72s ease infinite;
							transform-origin: 50% 50%;
							@keyframes shake-animation {
								0% { transform: translate(0, 0); }
								1.78571% { transform: translate(5px, 0); }
								3.57143% { transform: translate(0, 0); }
								5.35714% { transform: translate(5px, 0); }
								7.14286% { transform: translate(0, 0); }
								8.92857% { transform: translate(5px, 0); }
								10.71429% { transform: translate(0, 0); }
								100% { transform: translate(0, 0); }
							}
						` + " " +
						(animationDelay ? css`animation-delay: ${animationDelay}ms;` : null) /* prettier-ignore */
					}
				>
					<XIcon className='w-[24px] h-[24px] absolute top-2 right-2 hidden md:block' />
					{IconMap[type]}
				</div>
			)}
		</div>
	)
}

export default IllustrationPopup
